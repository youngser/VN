c(corr, p, snum, as.data.frame(result))
str(result)
data.frame(corr=corr, p=p, snum=snum, as.data.frame(result))
n <- 150; corr <- 0.5; p <- 0.5; snum <- 20
sgm_compare(n, corr, p, snum)
n <- 150; corr <- 0.4; p <- 0.5; snum <- 20
sgm_compare(n, corr, p, snum)
df <- NULL
svec <- seq(5,20,by=5)
pvec <- seq(0.2,0.8,by=0.2)
df <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, p, s)
df <- rbind(df, data.frame(corr=corr, p=p, snum=, as.data.frame(result)))
}
df <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
df <- rbind(df, data.frame(corr=corr, p=p, snum=, as.data.frame(result)))
}
df <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
df <- rbind(df, data.frame(corr=corr, p=p, snum=s, as.data.frame(result)))
}
df
df <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
df <- rbind(df, data.frame(corr=corr, p=pvec[p], snum=svec[s], as.data.frame(result)))
}
require(tidyverse)
df
melt
?gather
df2 <- gather(df, key=c(corr, p,snum))
head(df2)
df2 <- gather(df, key=c("corr","p","snum"))
head(df2)
df2 <- gather(df, corr,p,snum)
head(df2)
/melt
require(dplyr)
/melt
require(reshape2)
/melt
?melt
df2 <- melt(df, id=c("corr","p","snum")); head(df2)
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
df.time <- rbind(df, data.frame(corr=corr, p=pvec[p], snum=svec[s], bu=result$time_iGM, jhu=result$time_youngser))
df.error <- rbind(df, data.frame(corr=corr, p=pvec[p], snum=svec[s], bu=result$error_iGM, jhu=result$error_youngser))
}
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
df.time <- rbind(df.time, data.frame(corr=corr, p=pvec[p], snum=svec[s], bu=result$time_iGM, jhu=result$time_youngser))
df.error <- rbind(df.error, data.frame(corr=corr, p=pvec[p], snum=svec[s], bu=result$error_iGM, jhu=result$error_youngser))
}
df2.time <- melt(df.time, id=c("corr","p","snum")); head(df2.time)
df2.error <- melt(df.error, id=c("corr","p","snum")); head(df2.error)
df2.time <- melt(df.time, id=c("corr","p","snum"), variable.name=method, value.name=time); head(df2.time)
df2.time <- melt(df.time, id=c("corr","p","snum"), variable.name="method", value.name="time"); head(df2.time)
df2.error <- melt(df.error, id=c("corr","p","snum"), variable.name="method", value.name="error"); head(df2.error)
df2 <- full_join(df2.time, df2.error); head(df2)
ggplot(df2, aes(x=snum, y=time), col=method) + geom_line() + geom_point() +
facet_wrap(~p)
str(df2)
ggplot(df2, aes(x=snum, y=time), col=method) + geom_line() + geom_point() +
facet_wrap(~factor(p))
ggplot(df2, aes(x=factor(snum), y=time), col=method) + geom_line() + geom_point() +
facet_wrap(~factor(p))
ggplot(df2, aes(x=snum, y=time), col=method) + geom_line() + geom_point() +
facet_wrap(~factor(p))
ggplot(df2, aes(x=snum, y=time,col=method)) + geom_line() + geom_point() +
facet_wrap(~factor(p))
p.error <- ggplot(df2, aes(x=snum, y=error, col=method)) + geom_line() + geom_point() +
facet_wrap(~factor(p)); p.error
/facet_wrap
?facet_wrap
p.error <- ggplot(df2, aes(x=snum, y=error, col=method)) + geom_line() + geom_point() +
facet_wrap(~factor(p), ncol=4); p.error
/facet_grid
?facet_grid
head(df2)
df3 <- melt(df2, id=c("corr","p","snum"),variable.name="stat"); head(df3)
head(df2)
df3 <- melt(df2, id=c("corr","p","snum","method"),variable.name="stat"); head(df3)
ggplot(df3, aes(x=snum, y=value, col=method)) + geom_line() + geom_point() +
facet_wrap(stat~factor(p))
ggplot(df3, aes(x=snum, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p))
n <- 500; corr <- 0.4; p <- 0.5; snum <- 20
sgm_compare(n, corr, p, snum)
n <- 300; corr <- 0.4; p <- 0.5; snum <- 20
sgm_compare(n, corr, p, snum)
svec <- seq(5,20,by=5)
pvec <- seq(0.2,0.8,by=0.2)
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
df.time <- rbind(df.time, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$time_iGM, jhu=result$time_youngser))
df.error <- rbind(df.error, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$error_iGM, jhu=result$error_youngser))
}
sgm_compare <- function(n, corr, p, snum){
g <- igraph::sample_correlated_gnp_pair(n=n, corr = corr, p = p)
A <- g$graph1
B <- g$graph2
A <- as.matrix(A[])
B <- as.matrix(B[])
seeds <- 1:snum
n <- nrow(A)
seeds_log <- check_seeds(seeds, n, logical = TRUE)
seeds <- as.matrix(check_seeds(seeds))
set.seed(1234)
time_iGM <- system.time(corr_iGM <- graph_match_FW(A, B, seeds, start = "bari", max_iter = 20)$corr)
error_iGM <- mean(corr_iGM[!seeds_log]!=which(!seeds_log))
set.seed(1234)
time_youngser <- system.time(corr_youngser <- sgm(A, B, seeds)$corr)
#  time_youngser <- system.time(corr_youngser <- sgm.ordered(A, B, seeds)$corr)
corr_youngser <- c(1:snum,corr_youngser)
error_youngser <- mean(corr_youngser[!seeds_log]!=which(!seeds_log))
result <- tibble(time_iGM = time_iGM[1], time_youngser = time_youngser[1],
error_iGM = error_iGM, error_youngser = error_youngser)
result
}
require(tidyverse)
n <- 300; corr <- 0.4; p <- 0.5; snum <- 20
sgm_compare(n, corr, p, snum)
svec <- seq(5,20,by=5)
pvec <- seq(0.2,0.8,by=0.2)
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
df.time <- rbind(df.time, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$time_iGM, jhu=result$time_youngser))
df.error <- rbind(df.error, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$error_iGM, jhu=result$error_youngser))
}
df2.time <- melt(df.time, id=c("corr","p","seed"), variable.name="method", value.name="time"); head(df2.time)
df2.error <- melt(df.error, id=c("corr","p","seed"), variable.name="method", value.name="error"); head(df2.error)
df2 <- full_join(df2.time, df2.error); head(df2)
p.time <- ggplot(df2, aes(x=seed, y=time,col=method)) + geom_line() + geom_point() +
facet_wrap(~factor(p), ncol=4); p.time
p.error <- ggplot(df2, aes(x=seed, y=error, col=method)) + geom_line() + geom_point() +
facet_wrap(~factor(p), ncol=4); p.error
df3 <- melt(df2, id=c("corr","p","seed","method"),variable.name="stat"); head(df3)
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p))
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p)) + coord_fixed()
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p)) #+ coord_fixed()
?coord_fixed
?facet_grid
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
n <- 200; corr <- 0.4; p <- 0.5; snum <- 20
sgm_compare(n, corr, p, snum)
svec <- seq(5,20,by=5)
pvec <- seq(0.2,0.8,by=0.2)
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
df.time <- rbind(df.time, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$time_iGM, jhu=result$time_youngser))
df.error <- rbind(df.error, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$error_iGM, jhu=result$error_youngser))
}
df2.time <- melt(df.time, id=c("corr","p","seed"), variable.name="method", value.name="time"); head(df2.time)
df2.error <- melt(df.error, id=c("corr","p","seed"), variable.name="method", value.name="error"); head(df2.error)
df2 <- full_join(df2.time, df2.error); head(df2)
p.time <- ggplot(df2, aes(x=seed, y=time,col=method)) + geom_line() + geom_point() +
facet_wrap(~factor(p), ncol=4); p.time
p.error <- ggplot(df2, aes(x=seed, y=error, col=method)) + geom_line() + geom_point() +
facet_wrap(~factor(p), ncol=4); p.error
df3 <- melt(df2, id=c("corr","p","seed","method"),variable.name="stat"); head(df3)
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
str(g$graph1)
require(igraph)
str(g$graph1)
summary(g$graph1)
summary(g$graph2)
V(g$graph1)$name
V(g$graph1)$id
head(stat)
head(df3)
svec <- seq(5,30,by=5)
pvec <- seq(0.2,0.8,by=0.2)
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
df.time <- rbind(df.time, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$time_iGM, jhu=result$time_youngser))
df.error <- rbind(df.error, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$error_iGM, jhu=result$error_youngser))
}
df2.time <- melt(df.time, id=c("corr","p","seed"), variable.name="method", value.name="time"); head(df2.time)
df2.error <- melt(df.error, id=c("corr","p","seed"), variable.name="method", value.name="error"); head(df2.error)
df2 <- full_join(df2.time, df2.error); head(df2)
p.time <- ggplot(df2, aes(x=seed, y=time,col=method)) + geom_line() + geom_point() +
facet_wrap(~factor(p), ncol=4); p.time
p.error <- ggplot(df2, aes(x=seed, y=error, col=method)) + geom_line() + geom_point() +
facet_wrap(~factor(p), ncol=4); p.error
df3 <- melt(df2, id=c("corr","p","seed","method"),variable.name="stat"); head(df3)
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
n <- 200; corr <- 0.3; p <- 0.5; snum <- 20
#sgm_compare(n, corr, p, snum)
svec <- seq(5,30,by=5)
pvec <- seq(0.2,0.8,by=0.2)
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
df.time <- rbind(df.time, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$time_iGM, jhu=result$time_youngser))
df.error <- rbind(df.error, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$error_iGM, jhu=result$error_youngser))
}
df2.time <- melt(df.time, id=c("corr","p","seed"), variable.name="method", value.name="time"); head(df2.time)
df2.error <- melt(df.error, id=c("corr","p","seed"), variable.name="method", value.name="error"); head(df2.error)
df2 <- full_join(df2.time, df2.error); head(df2)
df3 <- melt(df2, id=c("corr","p","seed","method"),variable.name="stat"); head(df3)
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
sgm_compare <- function(n, corr, p, snum){
g <- igraph::sample_correlated_gnp_pair(n=n, corr = corr, p = p)
A <- g$graph1
B <- g$graph2
A <- as.matrix(A[])
B <- as.matrix(B[])
seeds <- 1:snum
n <- nrow(A)
seeds_log <- check_seeds(seeds, n, logical = TRUE)
seeds <- as.matrix(check_seeds(seeds))
#  set.seed(12345)
time_iGM <- system.time(corr_iGM <- graph_match_FW(A, B, seeds, start = "bari", max_iter = 20)$corr)
error_iGM <- mean(corr_iGM[!seeds_log]!=which(!seeds_log))
#  set.seed(12345)
time_youngser <- system.time(corr_youngser <- sgm(A, B, seeds)$corr)
corr_youngser <- c(1:snum,corr_youngser)
error_youngser <- mean(corr_youngser[!seeds_log]!=which(!seeds_log))
result <- tibble(time_iGM = time_iGM[1], time_youngser = time_youngser[1],
error_iGM = error_iGM, error_youngser = error_youngser)
result
}
require(tidyverse)
n <- 200; corr <- 0.4; #p <- 0.5; snum <- 20
#sgm_compare(n, corr, p, snum)
svec <- seq(5,30,by=5)
pvec <- seq(0.2,0.8,by=0.2)
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
df.time <- rbind(df.time, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$time_iGM, jhu=result$time_youngser))
df.error <- rbind(df.error, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$error_iGM, jhu=result$error_youngser))
}
df2.time <- melt(df.time, id=c("corr","p","seed"), variable.name="method", value.name="time"); head(df2.time)
df2.error <- melt(df.error, id=c("corr","p","seed"), variable.name="method", value.name="error"); head(df2.error)
df2 <- full_join(df2.time, df2.error); head(df2)
df3 <- melt(df2, id=c("corr","p","seed","method"),variable.name="stat"); head(df3)
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
set.seed(12345)
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
df.time <- rbind(df.time, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$time_iGM, jhu=result$time_youngser))
df.error <- rbind(df.error, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$error_iGM, jhu=result$error_youngser))
}
df2.time <- melt(df.time, id=c("corr","p","seed"), variable.name="method", value.name="time"); head(df2.time)
df2.error <- melt(df.error, id=c("corr","p","seed"), variable.name="method", value.name="error"); head(df2.error)
df2 <- full_join(df2.time, df2.error); head(df2)
df3 <- melt(df2, id=c("corr","p","seed","method"),variable.name="stat"); head(df3)
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
set.seed(1234)
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
df.time <- rbind(df.time, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$time_iGM, jhu=result$time_youngser))
df.error <- rbind(df.error, data.frame(corr=corr, p=pvec[p], seed=svec[s], bu=result$error_iGM, jhu=result$error_youngser))
}
df2.time <- melt(df.time, id=c("corr","p","seed"), variable.name="method", value.name="time"); head(df2.time)
df2.error <- melt(df.error, id=c("corr","p","seed"), variable.name="method", value.name="error"); head(df2.error)
df2 <- full_join(df2.time, df2.error); head(df2)
df3 <- melt(df2, id=c("corr","p","seed","method"),variable.name="stat"); head(df3)
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
str(result)
as.vector(result)
?tibble
unlist(result)
str(unlist(result))
nmc=2
mat <- matrix(0,nmc,4)
for (mc in 1:nmc) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
mat[mc,] <- unlist(result)
}
mat
mat <- matrix(0,nmc,4)
for (mc in 1:nmc) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
mat[mc,] <- unlist(result)
}
mat
df.time <- df.error <- NULL
s
p
df.time <- rbind(df.time, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mat[,1], jhu=mat[,2]))
df.time
set.seed(1234)
nmc <- 2
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
mat <- matrix(0,nmc,4)
for (mc in 1:nmc) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
mat[mc,] <- unlist(result)
}
df.time <- rbind(df.time, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mat[,1], jhu=mat[,2]))
df.error <- rbind(df.error, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mat[,3], jhu=mat[,4]))
}
str(df.time)
head(df.time)
set.seed(1234)
nmc <- 2
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
mat <- matrix(0,nmc,4)
for (mc in 1:nmc) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
mat[mc,] <- unlist(result)
}
df.time <- rbind(df.time, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mean(mat[,1]), jhu=mean(mat[,2])))
df.error <- rbind(df.error, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mean(mat[,3]), jhu=mean(mat[,4])))
}
df2.time <- melt(df.time, id=c("n","corr","p","seed"), variable.name="method", value.name="time"); head(df2.time)
df2.error <- melt(df.error, id=c("n","corr","p","seed"), variable.name="method", value.name="error"); head(df2.error)
df2 <- full_join(df2.time, df2.error); head(df2)
df3 <- melt(df2, id=c("corr","p","seed","method"),variable.name="stat"); head(df3)
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
df2.time <- melt(df.time, id=c("n","corr","p","seed"), variable.name="method", value.name="time"); head(df2.time)
df2.error <- melt(df.error, id=c("n","corr","p","seed"), variable.name="method", value.name="error"); head(df2.error)
df2 <- full_join(df2.time, df2.error); head(df2)
df3 <- melt(df2, id=c("n","corr","p","seed","method"),variable.name="stat"); head(df3)
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
mat
summary(mat)
apply(mat,2,mean)
apply(mat,2,sd)
set.seed(1234)
nmc <- 10
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
mat <- matrix(0,nmc,4)
for (mc in 1:nmc) {
result <- sgm_compare(n, corr, pvec[p], svec[s])
mat[mc,] <- unlist(result)
}
df.time <- rbind(df.time, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mean(mat[,1]), jhu=mean(mat[,2])))
df.error <- rbind(df.error, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mean(mat[,3]), jhu=mean(mat[,4])))
}
suppressMessages(library(doParallel))
registerDoParallel(cores=4)
set.seed(1234)
nmc <- 10
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
mat <- foreach (mc=1:nmc, .combine='rbind') %dopar% {
result <- sgm_compare(n, corr, pvec[p], svec[s])
unlist(result)
}
df.time <- rbind(df.time, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mean(mat[,1]), jhu=mean(mat[,2])))
df.error <- rbind(df.error, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mean(mat[,3]), jhu=mean(mat[,4])))
}
detectCores()
suppressMessages(library(doParallel))
registerDoParallel(cores=detectCores()-1)
n <- 200; corr <- 0.4; #p <- 0.5; snum <- 20
#sgm_compare(n, corr, p, snum)
svec <- seq(5,30,by=5)
pvec <- seq(0.2,0.8,by=0.2)
set.seed(1234)
nmc <- 10
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
mat <- foreach (mc=1:nmc, .combine='rbind') %dopar% {
result <- sgm_compare(n, corr, pvec[p], svec[s])
unlist(result)
}
df.time <- rbind(df.time, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mean(mat[,1]), jhu=mean(mat[,2])))
df.error <- rbind(df.error, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mean(mat[,3]), jhu=mean(mat[,4])))
}
df2.time <- melt(df.time, id=c("n","corr","p","seed"), variable.name="method", value.name="time"); head(df2.time)
df2.error <- melt(df.error, id=c("n","corr","p","seed"), variable.name="method", value.name="error"); head(df2.error)
df2 <- full_join(df2.time, df2.error); head(df2)
df3 <- melt(df2, id=c("n","corr","p","seed","method"),variable.name="stat"); head(df3)
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
mat
apply(mat,2, sd/10)
apply(mat,2, sd)
apply(mat,2, sd) / sqrt(10)
set.seed(12345)
?mclapply
n
corr
p
p=0.2
snum
ppp = mclapply(1:nmc, sgm_compare)
ppp = mclapply(1:nmc, sgm_compare, mc.cores=7)
set.seed(12345)
nmc <- 10
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
mat <- foreach (mc=1:nmc, .combine='rbind') %dopar% {
result <- sgm_compare(n, corr, pvec[p], svec[s])
unlist(result)
}
df.time <- rbind(df.time, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mean(mat[,1]), jhu=mean(mat[,2])))
df.error <- rbind(df.error, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mean(mat[,3]), jhu=mean(mat[,4])))
}
df2.time <- melt(df.time, id=c("n","corr","p","seed"), variable.name="method", value.name="time"); head(df2.time)
df2.error <- melt(df.error, id=c("n","corr","p","seed"), variable.name="method", value.name="error"); head(df2.error)
df2 <- full_join(df2.time, df2.error); head(df2)
df3 <- melt(df2, id=c("n","corr","p","seed","method"),variable.name="stat"); head(df3)
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point() +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
apply(mat,2, sd) / sqrt(10)
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line(aes(shape=method)) + geom_point() +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point(aes(shape=method)) +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
set.seed(12345)
nmc <- 100
df.time <- df.error <- NULL
for (s in 1:length(svec)) {
for (p in 1:length(pvec)) {
mat <- foreach (mc=1:nmc, .combine='rbind') %dopar% {
result <- sgm_compare(n, corr, pvec[p], svec[s])
unlist(result)
}
df.time <- rbind(df.time, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mean(mat[,1]), jhu=mean(mat[,2])))
df.error <- rbind(df.error, data.frame(n=n,corr=corr, p=pvec[p], seed=svec[s], bu=mean(mat[,3]), jhu=mean(mat[,4])))
}
df2.time <- melt(df.time, id=c("n","corr","p","seed"), variable.name="method", value.name="time"); head(df2.time)
df2.error <- melt(df.error, id=c("n","corr","p","seed"), variable.name="method", value.name="error"); head(df2.error)
df2 <- full_join(df2.time, df2.error); head(df2)
df3 <- melt(df2, id=c("n","corr","p","seed","method"),variable.name="stat"); head(df3)
ggplot(df3, aes(x=seed, y=value, col=method)) + geom_line() + geom_point(aes(shape=method)) +
facet_grid(stat~factor(p), scale="free_y") #+ coord_fixed()
save(n,corr,svec,pvec,nmc,df.time,df.error,file="~/Dropbox/SGM/iGraphMatch/Test/sgm_compare.Rbin")
library(VN)
sessionInfo()
library(VN)
detach(package:VN)
library(VN)
?vnsgm
library(VN)
require(VN)
?rsp
rsp(5, 0.5)
A
A = matrix(0,5,5)
A[]
A
require(Matrix)
bdiag(A[], Matrix(0,3,3))
A = matrix(sample(25),5,5)
A
bdiag(A[], Matrix(0,3,3))
Matrix(0,3,3)
library(VN)
?sgm.ordered
library(VN)
x = matrix(sample(9),3,3)
y = matrix(sample(9),3,3)
x
y
x %*% y
crossprod(x, y)
crossprod(x, t(y))
x %*% t(y)
tcrossprod(x, y)
t(x) %*% y
crossprod(x, y)
crossprod(x)
t(x) %*% x
solve(crossprod(x))
require(VN)
?rsp
rsp(10, 0.1)
rsp
